package com.issuetracker.validator;

import java.time.LocalDate;

import com.issuetracker.exception.IssueTrackerException;
import com.issuetracker.model.Issue;
import com.issuetracker.model.IssueStatus;

public class Validator {
    
 public void validate(Issue issue) throws IssueTrackerException {
	
	if( !this.isValidIssueId(issue.getIssueId()) )
	    throw new IssueTrackerException("The issue ID is of invalid format!");
	else if( !this.isValidIssueDescription(issue.getIssueDescription()) )
	    throw new IssueTrackerException("The issue description is of unacceptable format!");
	else if( !this.isValidReportedOn(issue.getReportedOn()) )
	    throw new IssueTrackerException("The reported date is incorrect!");
	else if( !this.isValidStatus(issue.getStatus()) )
	    throw new IssueTrackerException("The status of the issue is inappropriate!");
	
 }

 public Boolean isValidIssueId(String issueId) {
	return issueId.matches("(MTI-I)-(\\d{2}[1-9])-(LS|MS|HS)");
 }

 public Boolean isValidIssueDescription(String issueDescription)
 {
	// Your Code Goes Here

	return null;
 }

 public Boolean isValidReportedOn(LocalDate reportedOn)
 {
	// Your Code Goes Here

	return null;
 }

 public Boolean isValidStatus(IssueStatus status)
 {
	// Your Code Goes Here

	return null;
 }
}